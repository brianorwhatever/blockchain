{
    "docs": [
        {
            "location": "/",
            "text": "Blockchain Notes\n\n\nThe goal of this project is to build a broad set of notes on both high-level, and low-level aspects of blockchain tech and cryptocurrencies.",
            "title": "Home"
        },
        {
            "location": "/#blockchain-notes",
            "text": "The goal of this project is to build a broad set of notes on both high-level, and low-level aspects of blockchain tech and cryptocurrencies.",
            "title": "Blockchain Notes"
        },
        {
            "location": "/basic_tech/hashing/",
            "text": "Hash functions are a fundamental tool for blockchains, and are used in many other areas of cryptocurrencies. They are also used all over the place in computer science, and are pretty amazing little pieces of digital machinery.\n\n\nDefinition\n\n\nCryptographic hash functions are one-way functions that map data of arbitrary size to some fixed-size output. So whether your input is 1 bit or 1 billion bits the output will be the same size.\n\n\nA hash function can be viewed as a black box, where given some input like the example below, the output is fixed-size, and random looking.\n\n\nExample\n\n\nGiven the string:\n\n\nhello\n\n\n\n\nThe SHA-256 hash algorithm will output:\n\n\n0x2cf24dba5fb0a30e26e83b2ac5b9e29e1b161e5c1fa7425e73043362938b9824\n\n\n\n\nGiven the entirety of Wikipedia as input, the output would be the same size, but the characters would be different.\n\n\nNote: Bitcoin uses SHA-256 in it's mining algorithm. Also, it's called SHA-256 because it outputs 256 bits.\n\n\nProperties of an Ideal Hash Function\n\n\n\n\nDeterminism\n: the same message always produces the same output\n\n\nQuickness\n: it is quick to compute the hash for some input\n\n\nIrreversibility\n: given some hash you can't figure out what the input was except by randomly guessing it and hashing the guess to see if it matches the target hash (the universe would end before you succeeded)\n\n\nAvalanche effect\n: even a small change to the input completely alters the output\n\n\nCollision resistance\n: it is infeasible to find two messages that hash to the same value (sun explodes before you succeed)\n\n\n\n\nSo given these properties, what good are they?\n\n\nApplications\n\n\nDigital Fingerprinting\n\n\nThe simplest application is \ndigital fingerprinting\n. Take some chunk of data and hash it. The hash value will be unique to that document.\n\n\nExample\n\n\nSuppose the Ubuntu website wants to let people download the Ubuntu image file.\n\n\nThey can offer the download on the site, but also publish the hash of it.\n\n\nUsers can then download the file, and hash it themselves using the same algorithm. If their hash matches the published one then every single bit in their file matches exactly the official file.\n\n\nThat way they user knows the file wasn't altered in transit, or some virus on their computer didn't inject anything after it downloaded. The user could also download the file from any site, even an untrusted one. If they hash it and it matches the published hash then their file is legit.\n\n\nHash lists\n\n\nThis concept can be extended to \nhash lists\n to allow trustless peer to peer file sharing.\n\n\nExample\n\n\n\n\nTake a file, perhaps a movie, break it up into many small pieces.\n\n\nHash each piece.\n\n\nPublish this relatively small list of hashes somewhere trusted. \n\n\nNow a peer in the network can accept a file piece from anyone, hash it; if the hash is found in the list then keep the piece, else discard.\n\n\n\n\nAn attacker cannot create a malicious file piece that matches a hash in the list. It's just too hard to find something that hashes to one of those hashes in the list, except the actual file piece. \n\n\nThis is basically what Bittorrent does.\n\n\nImprovement\n\n\nEven better we could hash the \nhash-list itself\n to get a master-hash or 'top-hash'.\n\n\nWe can then just publish the top-hash and allow the peers to share hash-lists. When a peer sends you the hash-list, hash it, check if it matches the published top-hash. If it matches then the hash-list you were given is legit and you can use it to start accepting blocks.\n\n\nBlockchains\n\n\nThe most relevant application of hash functions to cryptocurrencies is of course the blockchain. Watch the video on the blockchain page for a visual explanation.",
            "title": "Hashing"
        },
        {
            "location": "/basic_tech/hashing/#definition",
            "text": "Cryptographic hash functions are one-way functions that map data of arbitrary size to some fixed-size output. So whether your input is 1 bit or 1 billion bits the output will be the same size.  A hash function can be viewed as a black box, where given some input like the example below, the output is fixed-size, and random looking.  Example  Given the string:  hello  The SHA-256 hash algorithm will output:  0x2cf24dba5fb0a30e26e83b2ac5b9e29e1b161e5c1fa7425e73043362938b9824  Given the entirety of Wikipedia as input, the output would be the same size, but the characters would be different.  Note: Bitcoin uses SHA-256 in it's mining algorithm. Also, it's called SHA-256 because it outputs 256 bits.",
            "title": "Definition"
        },
        {
            "location": "/basic_tech/hashing/#properties-of-an-ideal-hash-function",
            "text": "Determinism : the same message always produces the same output  Quickness : it is quick to compute the hash for some input  Irreversibility : given some hash you can't figure out what the input was except by randomly guessing it and hashing the guess to see if it matches the target hash (the universe would end before you succeeded)  Avalanche effect : even a small change to the input completely alters the output  Collision resistance : it is infeasible to find two messages that hash to the same value (sun explodes before you succeed)   So given these properties, what good are they?",
            "title": "Properties of an Ideal Hash Function"
        },
        {
            "location": "/basic_tech/hashing/#applications",
            "text": "",
            "title": "Applications"
        },
        {
            "location": "/basic_tech/hashing/#digital-fingerprinting",
            "text": "The simplest application is  digital fingerprinting . Take some chunk of data and hash it. The hash value will be unique to that document.  Example  Suppose the Ubuntu website wants to let people download the Ubuntu image file.  They can offer the download on the site, but also publish the hash of it.  Users can then download the file, and hash it themselves using the same algorithm. If their hash matches the published one then every single bit in their file matches exactly the official file.  That way they user knows the file wasn't altered in transit, or some virus on their computer didn't inject anything after it downloaded. The user could also download the file from any site, even an untrusted one. If they hash it and it matches the published hash then their file is legit.",
            "title": "Digital Fingerprinting"
        },
        {
            "location": "/basic_tech/hashing/#hash-lists",
            "text": "This concept can be extended to  hash lists  to allow trustless peer to peer file sharing.  Example   Take a file, perhaps a movie, break it up into many small pieces.  Hash each piece.  Publish this relatively small list of hashes somewhere trusted.   Now a peer in the network can accept a file piece from anyone, hash it; if the hash is found in the list then keep the piece, else discard.   An attacker cannot create a malicious file piece that matches a hash in the list. It's just too hard to find something that hashes to one of those hashes in the list, except the actual file piece.   This is basically what Bittorrent does.",
            "title": "Hash lists"
        },
        {
            "location": "/basic_tech/hashing/#improvement",
            "text": "Even better we could hash the  hash-list itself  to get a master-hash or 'top-hash'.  We can then just publish the top-hash and allow the peers to share hash-lists. When a peer sends you the hash-list, hash it, check if it matches the published top-hash. If it matches then the hash-list you were given is legit and you can use it to start accepting blocks.",
            "title": "Improvement"
        },
        {
            "location": "/basic_tech/hashing/#blockchains",
            "text": "The most relevant application of hash functions to cryptocurrencies is of course the blockchain. Watch the video on the blockchain page for a visual explanation.",
            "title": "Blockchains"
        },
        {
            "location": "/basic_tech/pubkey/",
            "text": "Public key cryptography, or asymmetric cryptography, is what Bitcoin and others use in order to verify transactions.This tech is essential for cryptos to work.\n\n\nPublic key crypto allows \nauthentication\n and \nencryption\n between parties which have never met.\n\n\nMost cryptocurrencies do not actually encrypt transactions or any other data on the blockchain so we only need to worry about authentication for now.\n\n\nAuthentication\n\n\nExample\n\n\nLet's say you want to send a message to your friend over an untrusted network, and your friend needs to be able to tell for sure that the message came from you.\n\n\nYou and your friend have never met in person to exchange a shared secret, but your public key has been publicly shared.\n\n\nSend\n:\n\n\n\n\nGenerate a key-pair (a public and private key)\n\n\nUse your private key and the message to generate a signature\n\n\nSend the message and the signature\n\n\n\n\nRecieve\n:\n\n\n\n\nYour friend sees the message and signature\n\n\nYour friend uses your public key and message (and crypto magic) to see if the signature is correct\n\n\n\n\nIf the message was altered at all they will know. If the signature was produced by someone without the private key they will know.\n\n\nBitcoin\n\n\nThis is how Bitcoin and other cryptocurrencies verify transactions. You sign your transaction using your private key, others then check that the signature is valid given your transaction data and your public key (your account address).",
            "title": "Public Key Crypto"
        },
        {
            "location": "/basic_tech/pubkey/#authentication",
            "text": "Example  Let's say you want to send a message to your friend over an untrusted network, and your friend needs to be able to tell for sure that the message came from you.  You and your friend have never met in person to exchange a shared secret, but your public key has been publicly shared.  Send :   Generate a key-pair (a public and private key)  Use your private key and the message to generate a signature  Send the message and the signature   Recieve :   Your friend sees the message and signature  Your friend uses your public key and message (and crypto magic) to see if the signature is correct   If the message was altered at all they will know. If the signature was produced by someone without the private key they will know.",
            "title": "Authentication"
        },
        {
            "location": "/basic_tech/pubkey/#bitcoin",
            "text": "This is how Bitcoin and other cryptocurrencies verify transactions. You sign your transaction using your private key, others then check that the signature is valid given your transaction data and your public key (your account address).",
            "title": "Bitcoin"
        },
        {
            "location": "/basic_tech/blockchain/",
            "text": "Conceptualisation\n\n\nUltimately a blockchain is just a type of database. Like any database you can store whatever you want in it, but not all applications will benefit from the properties of a blockchain.\n\n\nDistributed\n\n\nBlockchains are shared data structures suitable for distributed systems. If you just want to save your files on your computer, or store website assets on a CDN, then you are probably far better off with a regular database.\n\n\nRead\n\n\nBlockchains are shared data structures. When a node joins the network they need to obtain the blockchain from their peers. They then go through the whole blockchain and verify it's validity.\n\n\nThe node may then scan the blockchain for data when needed, or it may have built up a 'state' of the network when it scanned through the blockchain. For example in Bitcoin the state can be thought of as how much Bitcoin each 'account' has. In order to figure this out each node must go through the whole chain.\n\n\nWrite\n\n\nTo write to a blockchain you create a new block and append it to the end of the chain. Once blocks are part of the chain they cannot be edited. So blockchains are append only.\n\n\nVisual Explanation\n\n\nThe video below perfectly explains how blockchains work in a visual way.",
            "title": "Blockchains"
        },
        {
            "location": "/basic_tech/blockchain/#conceptualisation",
            "text": "Ultimately a blockchain is just a type of database. Like any database you can store whatever you want in it, but not all applications will benefit from the properties of a blockchain.",
            "title": "Conceptualisation"
        },
        {
            "location": "/basic_tech/blockchain/#distributed",
            "text": "Blockchains are shared data structures suitable for distributed systems. If you just want to save your files on your computer, or store website assets on a CDN, then you are probably far better off with a regular database.",
            "title": "Distributed"
        },
        {
            "location": "/basic_tech/blockchain/#read",
            "text": "Blockchains are shared data structures. When a node joins the network they need to obtain the blockchain from their peers. They then go through the whole blockchain and verify it's validity.  The node may then scan the blockchain for data when needed, or it may have built up a 'state' of the network when it scanned through the blockchain. For example in Bitcoin the state can be thought of as how much Bitcoin each 'account' has. In order to figure this out each node must go through the whole chain.",
            "title": "Read"
        },
        {
            "location": "/basic_tech/blockchain/#write",
            "text": "To write to a blockchain you create a new block and append it to the end of the chain. Once blocks are part of the chain they cannot be edited. So blockchains are append only.",
            "title": "Write"
        },
        {
            "location": "/basic_tech/blockchain/#visual-explanation",
            "text": "The video below perfectly explains how blockchains work in a visual way.",
            "title": "Visual Explanation"
        },
        {
            "location": "/cryptoeconomics/markets/",
            "text": "A market is one of the many varieties of systems, institutions, procedures, social relations and infrastructures whereby parties engage in exchange (Wikipedia)\n\n\n\n\nMarket forces are more powerful than any government, corporation or other entity in the world. Markets are very much relevant to cryptocurrencies.\n\n\nExamples in Crypto\n\n\nBitcoin miners choose which transactions to include in their block based on the fees associated with the transactions. Pay a high fee and your transaction will get in. This is a market.\n\n\nThe decentralised internet will likely use a market system whereby your router routes packets based on the fee that they offer. In high demand periods the price per kilobyte will rise due to demand.\n\n\nGolem will attempt to create a market for computation whereby computers can offer up their resources for a price and buyers (users of that computation) can purchase it.\n\n\nAnywhere some kind of market exists cryptocurrencies may be able to bolster/redefine them. They will likely also ena ble entirely new markets to emerge.\n\n\nConceptualisation\n\n\nTypically one good/service is not exchanged directly for another, rather they are exchanged for money. So money, in whatever form, is the \nmedium of exchange\n for a market. Money allows the market to fluidly operate.\n\n\nMarkets are meritorious, decentralised, resource allocating systems.\n\n\nDecentralisation\n\n\nThey are decentralised in the sense that no one necessarily needs to oversee/control/govern the market in order for it to function. But even without a leader the market can intelligently allocate resources.\n\n\nOur current systems in fact \ndo\n have governing bodies precisely because we can't currently write our laws/rules into the \"code\" that defines the market because most markets exist in the physical world.\n\n\nWith cryptocurrencies we can make truly decentralised markets in the sense that the market rules are solidified into code and no governing body is needed at all to enforce those rules.\n\n\nResource allocation\n\n\nIf the market assigns a high price to some good then people will be incented to obtain/produce more of that good. Material resources as well as human time and effort will be allocated to satisfying this demand in proportion to how highly the market values it.\n\n\nSo a market can be a way for people to collectively orchestrate themselves and direct their efforts toward whatever it is that they value. This is a bottom up approach to human coordination that is \nmuch\n stronger than top down.\n\n\nPrice\n\n\nOne of the things that markets do is price goods/services. The mechanism by which this is done is supply and demand. The market should determine the proper price for a good/service such that the 'correct' amount of effort/resources are allocated to producing it.\n\n\nPricing Accurately\n\n\nSuppose you have a stock for some company in a stock market.\n\n\nIf all the participants in the market are aware of the company, understand what the company does, have familiarity with the companies publicly available accounting, and are aware of the company's direction and long term potential, then the market can accurately price the stock. \n\n\nWith complete information the market may still under or overvalue the stock due to the feedback loop nature of stock markets, but they will be much closer to the true value.\n\n\nIf however some/all participants are lacking information then the stock is very likely to be incorrectly priced.\n\n\nExternalities\n\n\nSometimes producing a good/service will have some impact on another party that did not necessarily have a say in the exchange. Externalities may be 'unpriced' in the sense that the damage/benefit was not priced in when the transaction happened.\n\n\nExample\n\n\nThe common example is pollution. Markets demand goods whose production pollutes the environment. People who had no part in the exchange may suffer the consequences of the pollution. It may also cost future generations huge amounts of money to fix. Neither of these were priced into the intial transaction.\n\n\nEfficiency\n\n\nMarkets are efficient in the sense that they price goods, and therefore allocate resources more 'accurately' than any individual or group could manage.\n\n\nFree markets\n\n\nA free market is one in which buyers and sellers can establish the proper price for things naturally without government interference. Supply and demand should function properly, and no collusion, monopoly etc. should not take place.",
            "title": "Markets"
        },
        {
            "location": "/cryptoeconomics/markets/#examples-in-crypto",
            "text": "Bitcoin miners choose which transactions to include in their block based on the fees associated with the transactions. Pay a high fee and your transaction will get in. This is a market.  The decentralised internet will likely use a market system whereby your router routes packets based on the fee that they offer. In high demand periods the price per kilobyte will rise due to demand.  Golem will attempt to create a market for computation whereby computers can offer up their resources for a price and buyers (users of that computation) can purchase it.  Anywhere some kind of market exists cryptocurrencies may be able to bolster/redefine them. They will likely also ena ble entirely new markets to emerge.",
            "title": "Examples in Crypto"
        },
        {
            "location": "/cryptoeconomics/markets/#conceptualisation",
            "text": "Typically one good/service is not exchanged directly for another, rather they are exchanged for money. So money, in whatever form, is the  medium of exchange  for a market. Money allows the market to fluidly operate.  Markets are meritorious, decentralised, resource allocating systems.",
            "title": "Conceptualisation"
        },
        {
            "location": "/cryptoeconomics/markets/#decentralisation",
            "text": "They are decentralised in the sense that no one necessarily needs to oversee/control/govern the market in order for it to function. But even without a leader the market can intelligently allocate resources.  Our current systems in fact  do  have governing bodies precisely because we can't currently write our laws/rules into the \"code\" that defines the market because most markets exist in the physical world.  With cryptocurrencies we can make truly decentralised markets in the sense that the market rules are solidified into code and no governing body is needed at all to enforce those rules.",
            "title": "Decentralisation"
        },
        {
            "location": "/cryptoeconomics/markets/#resource-allocation",
            "text": "If the market assigns a high price to some good then people will be incented to obtain/produce more of that good. Material resources as well as human time and effort will be allocated to satisfying this demand in proportion to how highly the market values it.  So a market can be a way for people to collectively orchestrate themselves and direct their efforts toward whatever it is that they value. This is a bottom up approach to human coordination that is  much  stronger than top down.",
            "title": "Resource allocation"
        },
        {
            "location": "/cryptoeconomics/markets/#price",
            "text": "One of the things that markets do is price goods/services. The mechanism by which this is done is supply and demand. The market should determine the proper price for a good/service such that the 'correct' amount of effort/resources are allocated to producing it.",
            "title": "Price"
        },
        {
            "location": "/cryptoeconomics/markets/#pricing-accurately",
            "text": "Suppose you have a stock for some company in a stock market.  If all the participants in the market are aware of the company, understand what the company does, have familiarity with the companies publicly available accounting, and are aware of the company's direction and long term potential, then the market can accurately price the stock.   With complete information the market may still under or overvalue the stock due to the feedback loop nature of stock markets, but they will be much closer to the true value.  If however some/all participants are lacking information then the stock is very likely to be incorrectly priced.",
            "title": "Pricing Accurately"
        },
        {
            "location": "/cryptoeconomics/markets/#externalities",
            "text": "Sometimes producing a good/service will have some impact on another party that did not necessarily have a say in the exchange. Externalities may be 'unpriced' in the sense that the damage/benefit was not priced in when the transaction happened.  Example  The common example is pollution. Markets demand goods whose production pollutes the environment. People who had no part in the exchange may suffer the consequences of the pollution. It may also cost future generations huge amounts of money to fix. Neither of these were priced into the intial transaction.",
            "title": "Externalities"
        },
        {
            "location": "/cryptoeconomics/markets/#efficiency",
            "text": "Markets are efficient in the sense that they price goods, and therefore allocate resources more 'accurately' than any individual or group could manage.",
            "title": "Efficiency"
        },
        {
            "location": "/cryptoeconomics/markets/#free-markets",
            "text": "A free market is one in which buyers and sellers can establish the proper price for things naturally without government interference. Supply and demand should function properly, and no collusion, monopoly etc. should not take place.",
            "title": "Free markets"
        },
        {
            "location": "/cryptoeconomics/money/",
            "text": "Conceptualisation\n\n\nThe Money Network\n\n\nA given money system is a big network consisting of people who use and believe in the money.\n\n\nMoney as IOUs\n\n\nWhen you go to your job and do some work, you contribute some actual value to the network, and in return you get some money.\n\n\nThis is basically an IOU from the network. The money itself doesn't have instrinsic value, but you can use it later to get something of real value from the network. So that cash you received is really just saying the network owes you X amount which you can redeem for whatever you want.\n\n\nReverse Ledger\n\n\nGiven that you have this big network of people who want to trade stuff with each other, one approach to keeping track of how much the network owes each person would be to maintain a big ledger. \n\n\nThere could be an entry for every person with their balance. This would be hard to maintain though.\n\n\nAnother approach is to use money. Money acts as a 'reverse ledger'. You don't have to keep track of names and balances, just let people trade the money.\n\n\nFunctions of Money\n\n\nThe key functions of money are \nmedium of exchange\n, \nunit of account\n, and \nstore of value\n. If some material/medium/system can serve these functions, and gains enough confidence and use, then it is in principle as valid a form of money as any other.\n\n\nMedium of Exchange\n\n\nMedium of exchange just means that the money serves as the thing that people trade in place of actual goods. \n\n\nTo be a good medium of exchange a money should be portable, durable, fungible (any dollar is just as good as any other), scarce, and easily divisible.\n\n\nExample\n\n\nRather than trading a pair of shoes for a chicken, you trade some money for the chicken and everyone else does the same.\n\n\nUnit of Account\n\n\nPrice everything in units of the money. So all goods and services are priced in terms of a common measure.\n\n\nExample\n\n\nThis is the ability to say a chicken is worth X dollars, a pair of shoes is worth Y dollars, rather than saying a chicken is worth Z pairs of shoes. \n\n\nStore of Value\n\n\n\n\nTo act as a store of value, a money must be able to be reliably saved, stored, and retrieved\u2026 (Wikipedia)\n\n\n\n\nSo your money should be able to hold value over time and then be used later.\n\n\nExample\n\n\nGold is good for store of value. Gold doesn't evaporate away and the supply doesn't inflate too much. People have valued it for thousands of years so it will probably remain valuable in 10 years or 50.\n\n\nFiat\n\n\nFiat is government-backed money. Usually a government will make it law that their fiat currency must be used for paying taxes, wages etc. and usually all businesses by law must accept fiat.\n\n\nWe tend to think of fiat as paper money, but something like 90% of the fiat money in circulation only exists as numbers in accounts/databases and has no physical counterpart. The digital portion still counts as being part of the same fiat supply.\n\n\nFiat has been criticised as being inflationary, and centralised.\n\n\nCentralisation\n\n\nThe amount of fiat that gets produced is controlled either directly by the government or kinda indirectly through a kinda separate entity like the Federal Reserve. \n\n\nThis organisation decides how much money will be produced, by whom, and in what manner (printing cash, \nfractional lending\n, etc).\n\n\nThis centralisation represents some risk as the controlling organisation may be attacked or become corrupt. They may produce too much money too quickly, and the country could suffer hyper-inflation. This has happened in Austria, China, Germany, Greece, Zimbabwe and many other countries.\n\n\nInflation\n\n\nThe US and Canada aim for something like 2% annual inflation. What this means is that if there is a total of \nX\n Canadian dollars in circulation right now, then one year from now there will be \nX*1.02\n total dollars in circulation. So the total supply of money is increasing constantly.\n\n\nIf you keep your money in a savings account you might get \n.25%\n interest or something like that, much less than the rate of inflation. So your money is devalued annually (relative to the total supply) by \n1.75%\n.\n\n\nOne way to look at this is that 1.75% of the value of your money is skimmed off every year and sent to the banks or whoever is issuing the new money.\n\n\nHyperinflation\n\n\nHyperinflation occurs when, for whatever reason, the rate of inflation gets completely out of control.\n\n\nMaybe the most well known example is in Zimbabwe where the Zimbabwe dollar (ZWL) went from:\n\n\n1.25 ZWL = 1 USD\n\n\n\n\nto:\n\n\n688,000,000,000 ZWL = 1 USD\n\n\n\n\nThey had \n100 trillion\n dollar bills!",
            "title": "Money"
        },
        {
            "location": "/cryptoeconomics/money/#conceptualisation",
            "text": "",
            "title": "Conceptualisation"
        },
        {
            "location": "/cryptoeconomics/money/#the-money-network",
            "text": "A given money system is a big network consisting of people who use and believe in the money.",
            "title": "The Money Network"
        },
        {
            "location": "/cryptoeconomics/money/#money-as-ious",
            "text": "When you go to your job and do some work, you contribute some actual value to the network, and in return you get some money.  This is basically an IOU from the network. The money itself doesn't have instrinsic value, but you can use it later to get something of real value from the network. So that cash you received is really just saying the network owes you X amount which you can redeem for whatever you want.",
            "title": "Money as IOUs"
        },
        {
            "location": "/cryptoeconomics/money/#reverse-ledger",
            "text": "Given that you have this big network of people who want to trade stuff with each other, one approach to keeping track of how much the network owes each person would be to maintain a big ledger.   There could be an entry for every person with their balance. This would be hard to maintain though.  Another approach is to use money. Money acts as a 'reverse ledger'. You don't have to keep track of names and balances, just let people trade the money.",
            "title": "Reverse Ledger"
        },
        {
            "location": "/cryptoeconomics/money/#functions-of-money",
            "text": "The key functions of money are  medium of exchange ,  unit of account , and  store of value . If some material/medium/system can serve these functions, and gains enough confidence and use, then it is in principle as valid a form of money as any other.",
            "title": "Functions of Money"
        },
        {
            "location": "/cryptoeconomics/money/#medium-of-exchange",
            "text": "Medium of exchange just means that the money serves as the thing that people trade in place of actual goods.   To be a good medium of exchange a money should be portable, durable, fungible (any dollar is just as good as any other), scarce, and easily divisible.  Example  Rather than trading a pair of shoes for a chicken, you trade some money for the chicken and everyone else does the same.",
            "title": "Medium of Exchange"
        },
        {
            "location": "/cryptoeconomics/money/#unit-of-account",
            "text": "Price everything in units of the money. So all goods and services are priced in terms of a common measure.  Example  This is the ability to say a chicken is worth X dollars, a pair of shoes is worth Y dollars, rather than saying a chicken is worth Z pairs of shoes.",
            "title": "Unit of Account"
        },
        {
            "location": "/cryptoeconomics/money/#store-of-value",
            "text": "To act as a store of value, a money must be able to be reliably saved, stored, and retrieved\u2026 (Wikipedia)   So your money should be able to hold value over time and then be used later.  Example  Gold is good for store of value. Gold doesn't evaporate away and the supply doesn't inflate too much. People have valued it for thousands of years so it will probably remain valuable in 10 years or 50.",
            "title": "Store of Value"
        },
        {
            "location": "/cryptoeconomics/money/#fiat",
            "text": "Fiat is government-backed money. Usually a government will make it law that their fiat currency must be used for paying taxes, wages etc. and usually all businesses by law must accept fiat.  We tend to think of fiat as paper money, but something like 90% of the fiat money in circulation only exists as numbers in accounts/databases and has no physical counterpart. The digital portion still counts as being part of the same fiat supply.  Fiat has been criticised as being inflationary, and centralised.",
            "title": "Fiat"
        },
        {
            "location": "/cryptoeconomics/money/#centralisation",
            "text": "The amount of fiat that gets produced is controlled either directly by the government or kinda indirectly through a kinda separate entity like the Federal Reserve.   This organisation decides how much money will be produced, by whom, and in what manner (printing cash,  fractional lending , etc).  This centralisation represents some risk as the controlling organisation may be attacked or become corrupt. They may produce too much money too quickly, and the country could suffer hyper-inflation. This has happened in Austria, China, Germany, Greece, Zimbabwe and many other countries.",
            "title": "Centralisation"
        },
        {
            "location": "/cryptoeconomics/money/#inflation",
            "text": "The US and Canada aim for something like 2% annual inflation. What this means is that if there is a total of  X  Canadian dollars in circulation right now, then one year from now there will be  X*1.02  total dollars in circulation. So the total supply of money is increasing constantly.  If you keep your money in a savings account you might get  .25%  interest or something like that, much less than the rate of inflation. So your money is devalued annually (relative to the total supply) by  1.75% .  One way to look at this is that 1.75% of the value of your money is skimmed off every year and sent to the banks or whoever is issuing the new money.",
            "title": "Inflation"
        },
        {
            "location": "/cryptoeconomics/money/#hyperinflation",
            "text": "Hyperinflation occurs when, for whatever reason, the rate of inflation gets completely out of control.  Maybe the most well known example is in Zimbabwe where the Zimbabwe dollar (ZWL) went from:  1.25 ZWL = 1 USD  to:  688,000,000,000 ZWL = 1 USD  They had  100 trillion  dollar bills!",
            "title": "Hyperinflation"
        },
        {
            "location": "/cryptoeconomics/networks/",
            "text": "Many apsects of human organisation and cooperation can be viewed as networks. Human society can be viewed as a collection of overlapping networks.\n\n\nNaval Ravikant talks about this idea quite a bit. Check \nthis\n post for some exposition on some of his views.\n\n\nExamples\n\n\nAll the people using a particular form of money make up a network. All the people participating in an economy make up a network. The residents of a city or country make up a network. These networks obviously overlap quite a bit.\n\n\nThe people involved in the iPhone supply chain form a network by virtue of their all contributing to that one product. But many of those people also work to produce other products, so they are also part of those networks as well.\n\n\nThe cars on road system constitute a network, the internet connected computers of the world make up a network (the internet). And so on.\n\n\nThese networks are systems of human organisation, and are incredibly useful.\n\n\nThe Money System\n\n\nA given money system is of course a big network where everyone 'believes' in the money.\n\n\nWhen you go to your job and do some work, you contribute some actual value to the network, and in return you get some money. \n\n\nThis is basically an IOU from the network. The money itself doesn't have instrinsic value, but you can use it later to get something of real value from the network.\n\n\nBetter Networks\n\n\nOne of the great challenges of human history has been to build better, more efficient, more sophisticated networks.\n\n\nThere are many ways to improve the functioning of a network. Better communication between participants may be of great benefit. Improving the effectiveness of individuals within the network no doubt makes the network more effective.\n\n\nAnother way to not only improve the functioning of a given network but also enable entirely new, previously untenable networks to form, is to come up with a better medium/structure/framework within which to define and enforce network rules.\n\n\nOur existing networks have their rules defined very loosely by a collection of laws, regulations, and agreements. These mechanisms are costly to maintain, imprecise, and often easily subverted.\n\n\nCryptoeconomics\n\n\nThe promise of Cryptoeconomics is networks/systems for which the rules are absolute and enforced with little or no overhead.\n\n\nSince networks are \neverywhere\n and most of them function pretty poorly the potential here cannot be overstated.",
            "title": "Networks"
        },
        {
            "location": "/cryptoeconomics/networks/#the-money-system",
            "text": "A given money system is of course a big network where everyone 'believes' in the money.  When you go to your job and do some work, you contribute some actual value to the network, and in return you get some money.   This is basically an IOU from the network. The money itself doesn't have instrinsic value, but you can use it later to get something of real value from the network.",
            "title": "The Money System"
        },
        {
            "location": "/cryptoeconomics/networks/#better-networks",
            "text": "One of the great challenges of human history has been to build better, more efficient, more sophisticated networks.  There are many ways to improve the functioning of a network. Better communication between participants may be of great benefit. Improving the effectiveness of individuals within the network no doubt makes the network more effective.  Another way to not only improve the functioning of a given network but also enable entirely new, previously untenable networks to form, is to come up with a better medium/structure/framework within which to define and enforce network rules.  Our existing networks have their rules defined very loosely by a collection of laws, regulations, and agreements. These mechanisms are costly to maintain, imprecise, and often easily subverted.",
            "title": "Better Networks"
        },
        {
            "location": "/cryptoeconomics/networks/#cryptoeconomics",
            "text": "The promise of Cryptoeconomics is networks/systems for which the rules are absolute and enforced with little or no overhead.  Since networks are  everywhere  and most of them function pretty poorly the potential here cannot be overstated.",
            "title": "Cryptoeconomics"
        },
        {
            "location": "/crypto_highlevel/byzantine/",
            "text": "Sharing Blocks in Bitcoin\n\n\nA distributed system like Bitcoin has a bunch of nodes scattered all over the world with no central leader. When a new block is created by a given node, it needs to be able to propagate this info to all other nodes.\n\n\nBut how can some random node trust that the block info that it receives wasn't just made up by some attacker?\n\n\nThis is essentially the \nTwo Generals Problem\n, or in the more general case \nByzantine Generals Problem\n.\n\n\nThe Problem\n\n\nSuppose an army splits into two in order to surround a city. Each army is controlled by a general. The generals must decide on what day they will attack.\n\n\nIf they attack on the same day they will take the city. If they attack on different days they will be defeated.\n\n\nSince they are spread out they must communicate via messenger. Unfortunately the messenger cannot be trusted. He could be bribed by the city to alter his message.\n\n\nSo there is a consensus problem. How do the general arrive at consensus about when to attack when they must use an unreliable communication channel?\n\n\nThe Solution\n\n\nIt has actually been proved that there is no solution that will guarantee perfect coordination. But there are solutions that offer a high probability of coordination in certain situations.\n\n\nSo general A writes a message 'attack Monday' and sends it to general B. The problem is that since this message is just a simple string, it can easily be changed to 'attack Tuesday' by an attacker.\n\n\nBut suppose that the generals agreed ahead of time that each message would include a nonce (a random number) and that they would only accept messages where the hash of the message and nonce started with X number of zeroes.\n\n\nSo to create a message you write your message, include a nonce, then hash it to see if the hash starts with X zeroes. If it doesn't, which it probably won't, increment your nonce and hash it again. Repeat until the hash starts with X zeroes.\n\n\nWhen a general receives a message the first thing they do is hash it to verify the hash starts with X zeroes. If it doesn't they just ignore it.\n\n\nSo if an attacker wants to alter your message, they will also need to find a new nonce such that the message plus nonce hashes to something starting with X zeroes.\n\n\nThis is certainly not impossible to do, but now the attacker needs to put in a huge amount of work if they want to falsify the message.\n\n\nIf the armies have a great deal more computing power than the attacker then they can agree on a high number of zeroes that the message must hash to. Then it will be infeasible for an attacker with much less computing power to alter a message and find a valid nonce for it.\n\n\nBitcoin\n\n\nSo in Bitcoin the Bitcoin nodes are the generals/armies and the untrusted messenger is the Internet.\n\n\nTo simplify things a bit, an attacker needs to have more computing power than the rest of the network combined in order to reliably falsify blocks.\n\n\nFor more details see the Bitcoin page [in progress].\n\n\nSource\n\n\nMost of the info on this page was based on the very good video linked below. I've attempted to summarize as much as possible but check it out for more detail.",
            "title": "Two Generals Problem"
        },
        {
            "location": "/crypto_highlevel/byzantine/#sharing-blocks-in-bitcoin",
            "text": "A distributed system like Bitcoin has a bunch of nodes scattered all over the world with no central leader. When a new block is created by a given node, it needs to be able to propagate this info to all other nodes.  But how can some random node trust that the block info that it receives wasn't just made up by some attacker?  This is essentially the  Two Generals Problem , or in the more general case  Byzantine Generals Problem .",
            "title": "Sharing Blocks in Bitcoin"
        },
        {
            "location": "/crypto_highlevel/byzantine/#the-problem",
            "text": "Suppose an army splits into two in order to surround a city. Each army is controlled by a general. The generals must decide on what day they will attack.  If they attack on the same day they will take the city. If they attack on different days they will be defeated.  Since they are spread out they must communicate via messenger. Unfortunately the messenger cannot be trusted. He could be bribed by the city to alter his message.  So there is a consensus problem. How do the general arrive at consensus about when to attack when they must use an unreliable communication channel?",
            "title": "The Problem"
        },
        {
            "location": "/crypto_highlevel/byzantine/#the-solution",
            "text": "It has actually been proved that there is no solution that will guarantee perfect coordination. But there are solutions that offer a high probability of coordination in certain situations.  So general A writes a message 'attack Monday' and sends it to general B. The problem is that since this message is just a simple string, it can easily be changed to 'attack Tuesday' by an attacker.  But suppose that the generals agreed ahead of time that each message would include a nonce (a random number) and that they would only accept messages where the hash of the message and nonce started with X number of zeroes.  So to create a message you write your message, include a nonce, then hash it to see if the hash starts with X zeroes. If it doesn't, which it probably won't, increment your nonce and hash it again. Repeat until the hash starts with X zeroes.  When a general receives a message the first thing they do is hash it to verify the hash starts with X zeroes. If it doesn't they just ignore it.  So if an attacker wants to alter your message, they will also need to find a new nonce such that the message plus nonce hashes to something starting with X zeroes.  This is certainly not impossible to do, but now the attacker needs to put in a huge amount of work if they want to falsify the message.  If the armies have a great deal more computing power than the attacker then they can agree on a high number of zeroes that the message must hash to. Then it will be infeasible for an attacker with much less computing power to alter a message and find a valid nonce for it.",
            "title": "The Solution"
        },
        {
            "location": "/crypto_highlevel/byzantine/#bitcoin",
            "text": "So in Bitcoin the Bitcoin nodes are the generals/armies and the untrusted messenger is the Internet.  To simplify things a bit, an attacker needs to have more computing power than the rest of the network combined in order to reliably falsify blocks.  For more details see the Bitcoin page [in progress].  Source  Most of the info on this page was based on the very good video linked below. I've attempted to summarize as much as possible but check it out for more detail.",
            "title": "Bitcoin"
        },
        {
            "location": "/crypto_highlevel/sybil/",
            "text": "Sybil Attacks in Bitcoin\n\n\nThe mining process of Bitcoin and other cryptocurrencies can be viewed as a lottery where one of the nodes in the network is randomly selected to put forth the next block in the blockchain.\n\n\nBut if you simply randomly select one of the nodes, what is to stop some attacker from spinning up thousands/millions of nodes (using virtual machines with different IPs or something) in order to have a much higher chance of winning the lottery?\n\n\nThis is a sybil attack in the context of cryptocurrencies.\n\n\nIf you were able to reliably win the lottery you could double-spend and do all kinds of other nefarious things. This is a really tough problem because in the digital world practically everything can be arbitrarily copied.\n\n\nBitcoin Solution\n\n\nThe solution that Satoshi came up with for Bitcoin was basically to, rather than allocate one 'lottery ticket' per node, instead allocate one lottery ticket per unit of computation.\n\n\nSince doing a computation uses electricity, hardware and time resources you can't just arbitrarily replicate these lottery tickets - they cost you in the real world.\n\n\nThis is implemented in the Proof of Work mining algorithm.",
            "title": "Sybil Attacks"
        },
        {
            "location": "/crypto_highlevel/sybil/#sybil-attacks-in-bitcoin",
            "text": "The mining process of Bitcoin and other cryptocurrencies can be viewed as a lottery where one of the nodes in the network is randomly selected to put forth the next block in the blockchain.  But if you simply randomly select one of the nodes, what is to stop some attacker from spinning up thousands/millions of nodes (using virtual machines with different IPs or something) in order to have a much higher chance of winning the lottery?  This is a sybil attack in the context of cryptocurrencies.  If you were able to reliably win the lottery you could double-spend and do all kinds of other nefarious things. This is a really tough problem because in the digital world practically everything can be arbitrarily copied.",
            "title": "Sybil Attacks in Bitcoin"
        },
        {
            "location": "/crypto_highlevel/sybil/#bitcoin-solution",
            "text": "The solution that Satoshi came up with for Bitcoin was basically to, rather than allocate one 'lottery ticket' per node, instead allocate one lottery ticket per unit of computation.  Since doing a computation uses electricity, hardware and time resources you can't just arbitrarily replicate these lottery tickets - they cost you in the real world.  This is implemented in the Proof of Work mining algorithm.",
            "title": "Bitcoin Solution"
        }
    ]
}